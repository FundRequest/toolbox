#/bin/bash -e
: '
FundRequest Toolbox module Front-end

Version 1.0
  - 2017-04-28 : Init
  

Updated by Karel Striegel
'
VERSION=1.0
SCRIPT_LOC=`dirname $0`

COLOR_BLUE="\033[36m"
COLOR_GREEN="\033[31m"
RESET_COLORS="\033[0m"
SAYAN_COLORS="\033[95m"

usage()
{
cat <<EOF

usage: $0 MODULE

FundRequest Toolbox module front-end

ACTION:
   install                Install the module 
   remove                 Remove the module 
   start                  Start the module 
   stop                   Stop the module 
   restart                Restart the module
   update                 Update the module
EOF
}

checkPrereq(){
  TMP=`docker version 2>/dev/null` 
  if [[ $? != 0 ]]
  then
     echo "ERROR: Docker command not found." >&2
     echo "       Please download and install Docker."
     echo "       Visit https://www.docker.com/community-edition" >&2
     exit 1
  fi

  TMP=`npm --version 2>/dev/null` 
  if [[ $? != 0 ]]
  then
     echo "ERROR: npm command not found." >&2
     echo "       Please download and install npm."
     echo "       Visit https://maven.apache.org/download.cgi" >&2
     exit 1
  fi

  TMP=`truffle version 2>/dev/null` 
  if [[ $? != 0 ]]
  then
    echo "WARNING: truffle command not found." >&2
    echo "INFO: Installing truffle ..." >&2
    npm install -g truffle
  fi
}

checkPrereq

ACTION=$1

# Parameter checking
if [[ -z $ACTION ]] 
then
     usage
     echo "BAD ARGUMENTS: Please provide at least an ACTION" >&2
     exit 1
fi

if [[ $ACTION != "install" ]] && [[ $ACTION != "start" ]] && [[ $ACTION != "stop" ]] && [[ $ACTION != "update" ]] && [[ $ACTION != "remove" ]] && [[ $ACTION != "restart" ]] 
then
     usage
     echo "BAD ARGUMENTS: '$ACTION' is an unknown ACTION." >&2
     exit 1
fi


install()
{
  echo "INFO > Installing module 'front-end'"
  CMD=`docker images | grep fundrequest/front-end`
  if [[ $? != 0 ]]
  then
    echo -e "INFO > Image 'fundrequest/front-end' not found, creating ...""$COLOR_BLUE"
    OLD_PWD=$PWD
    cd $SCRIPT_LOC/
    git clone https://gitlab.fundrequest.io/fundrequest/mvp-front-end src
    cd src
    docker build -t fundrequest/front-end .
    if [[ $? == 0 ]]; then
      echo -e "$RESET_COLORS""INFO > Succesfully create 'fundrequest/front-end-' image."
    else
      echo -e "$SAYAN_COLORS""INFO > Failed to create the 'fundrequest/front-end' image. Installation has failed""$RESET_COLORS"
      cd ../
          rm -rf src
          cd $OLD_PWD
          exit 1
    fi
    cd ../
    rm -rf src
    cd $OLD_PWD
  fi
}

remove()
{
  echo -e "INFO > Removing module 'front-end' $SAYAN_COLORS"
  CMD=`docker images | grep fundrequest/front-end`
  if [[ $? == 0 ]]; then
    for container in `docker ps | grep fundrequest/front-end | cut -d " " -f1`
    do
      docker stop $container
    done
    for container in `docker ps -a | grep fundrequest/front-end | cut -d " " -f1`
    do
      docker rm $container
    done
    docker rmi fundrequest/front-end
    echo -e "$RESET_COLORS""INFO > Module 'front-end' has been removed."
  else
    echo -e "$RESET_COLORS""INFO > Module 'front-end' already removed."
  fi
}

start()
{
  echo -e "INFO > Starting module 'front-end' $COLOR_GREEN"
  CMD=`docker ps | grep fundrequest.front-end.dev`
  if [[ $?  == 0 ]]; then
    echo "INFO > Container 'fundrequest.front-end.dev' already running"
    echo -e "$RESET_COLORS""INFO > Run '$COLOR_BLUE""docker logs -f fundrequest.front-end.dev$RESET_COLORS' to start tailing the container log. Ctrl+C to dettach."
 else
    echo "INFO > Starting container 'fundrequest.front-end.dev'"
    CONTAINER_ID=`docker run -d --rm -p 127.0.0.1:8545:8545 --name fundrequest.front-end.dev fundrequest/front-end`
    sleep 5
    CMD=`docker ps | grep fundrequest.front-end.dev`
    if [[ $? != 0 ]]; then
      echo -e "$SAYAN_COLORS""ERROR > Can't find container 'fundrequest.front-end.dev', something must be wrong. Exiting.""$RESET_COLORS"
      exit 1
    else
      echo -e "INFO > container 'fundrequest.front-end.dev' started with id $CONTAINER_ID""$RESET_COLORS"
      sleep 2
      docker logs fundrequest.front-end.dev
      echo -e "INFO > Run '$COLOR_BLUE""docker logs -f fundrequest.front-end.dev$RESET_COLORS' to start tailing the container log. Press Ctrl+C to dettach."
    fi
  fi
}

stop()
{
  echo -e "INFO > Stopping module 'front-end' $SAYAN_COLORS"
  CMD=`docker ps | grep fundrequest.front-end.dev`
  if [[ $? == 0 ]]; then
    for container in `docker ps | grep fundrequest.front-end.dev | cut -d " " -f1`
    do
      docker stop $container
    done
    for container in `docker ps -a | grep fundrequest.front-end.dev | cut -d " " -f1`
    do
      docker rm $container
    done
    echo -e "$RESET_COLORS""INFO > Module 'front-end' has been stopped."
  else
    echo -e "$RESET_COLORS""INFO > Module 'front-end' already stopped."
  fi
}

restart()
{
  echo -e "$RESET_COLORS""INFO > Restarting module 'front-end'"
  stop
  start
  echo -e "$RESET_COLORS""INFO > Module 'front-end' has been restarted"
}

case "$ACTION" in
      install)
          install
          ;;

      remove)
          remove
          ;;

      start)
          start
          ;;

      stop)
          stop
          ;;

      restart)
          restart
          ;;
       
      *)
          usage
          echo "BAD ARGUMENTS: '$ACTION' is an unknown ACTION." >&2
          exit 1

esac

exit





